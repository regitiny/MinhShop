# ===================================================================
# Spring Boot configuration.
#
# This configuration is used for unit/integration tests.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

yuvytung:
  value:
    number-of-cities: 0 # mặc định là không import và tối đa 63 thành phố
  server:
    name: catiny.com

eureka:
  client:
    enabled: false
  instance:
    appname: MinhShop
    instanceId: MinhShop:${spring.application.instance-id:${random.value}}

spring:
  profiles:
  # Uncomment the following line to enable tests against production database type rather than H2, using Testcontainers
  #active: testcontainers
  application:
    name: MinhShop
  cloud:
    config:
      enabled: false
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:h2:mem:minhshop;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    name:
    username:
    password:
    hikari:
      auto-commit: false
  jackson:
    serialization:
      write-durations-as-timestamps: false
  jpa:
    database-platform: tech.jhipster.domain.util.FixedH2Dialect
    open-in-view: false
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    properties:
      hibernate.id.new_generator_mappings: true
      hibernate.connection.provider_disables_autocommit: true
      hibernate.cache.use_second_level_cache: false
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: false
      hibernate.hbm2ddl.auto: validate
      hibernate.jdbc.time_zone: UTC
      hibernate.query.fail_on_pagination_over_collection_fetch: true
  liquibase:
    contexts: test
  mail:
    host: localhost
  main:
    allow-bean-definition-overriding: true
  messages:
    basename: i18n/messages
  task:
    execution:
      thread-name-prefix: minh-shop-task-
      pool:
        core-size: 1
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: minh-shop-scheduling-
      pool:
        size: 1
  thymeleaf:
    mode: HTML

server:
  port: 10344
  address: localhost

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  clientApp:
    name: 'minhShopApp'
  logging:
    # To test json console appender
    use-json-format: false
    logstash:
      enabled: false
      host: localhost
      port: 5000
      queue-size: 512
  mail:
    from: test@localhost
    base-url: http://127.0.0.1:8080
  security:
    authentication:
      jwt:
        # This token must be encoded using Base64 (you can type `echo 'secret-key'|base64` on your command line)
        base64-secret: Y2QwZDkyODYwOGVmNDc1YzQ2OWIzZGM4Yzk5MzQ2MWI2OWQ2MTA0MjNiNDFmN2RjNjc5Yzc1MmVkNGNhNTU0N2I4MmE2OWI3NzYwMTkxNmU0MTAxN2QzMTFjMWI5NDJhNTMwOWVjMmY5ZWFmODU4OWNjOWZiNTVkM2Q3OTViNmU=
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
kafka:
  bootstrap-servers: "${yuvytung.server.name}:9092"
  consumer:
    key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
    group.id: minh-shop
    auto.offset.reset: earliest
  producer:
    key.serializer: org.apache.kafka.common.serialization.StringSerializer
    value.serializer: org.apache.kafka.common.serialization.StringSerializer
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:
